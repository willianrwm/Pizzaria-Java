/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import regraNegocio.PizzaRN;
import vo.PizzaVO;

/**
 *
 * @author Karpa
 */
public class ModuloPizza extends TemplateBotoes implements ActionListener {

    /**
     * Creates new form ModuloPizza
     */
    int editar;
    TemplatePrincipal templatePrincipal;
    
    public ModuloPizza(TemplatePrincipal templatePrincipal) {
        this.templatePrincipal = templatePrincipal;
        initComponents();
        popularTabela();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pPainel = new javax.swing.JPanel();
        lSabor = new javax.swing.JLabel();
        lIngredientes = new javax.swing.JLabel();
        lPreço = new javax.swing.JLabel();
        lTipo = new javax.swing.JLabel();
        tfSabor = new javax.swing.JTextField();
        ftfPreco = new javax.swing.JFormattedTextField();
        cbTipo = new javax.swing.JComboBox();
        spIngredientes = new javax.swing.JScrollPane();
        taIngredientes = new javax.swing.JTextArea();
        spPizza = new javax.swing.JScrollPane();
        tPizza = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pizzas");
        setMinimumSize(new java.awt.Dimension(600, 500));
        setPreferredSize(new java.awt.Dimension(600, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pPainel.setPreferredSize(new java.awt.Dimension(600, 540));
        pPainel.setRequestFocusEnabled(false);

        lSabor.setText("Sabor:");

        lIngredientes.setText("Ingredientes:");

        lPreço.setText("Preço:");

        lTipo.setText("Tipo:");

        tfSabor.setEnabled(false);

        ftfPreco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        ftfPreco.setEnabled(false);

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Doce", "Salgada" }));
        cbTipo.setEnabled(false);

        taIngredientes.setColumns(20);
        taIngredientes.setRows(5);
        taIngredientes.setEnabled(false);
        spIngredientes.setViewportView(taIngredientes);

        tPizza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Sabor", "Ingredientes", "Tipo", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tPizza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPizzaMouseClicked(evt);
            }
        });
        spPizza.setViewportView(tPizza);

        javax.swing.GroupLayout pPainelLayout = new javax.swing.GroupLayout(pPainel);
        pPainel.setLayout(pPainelLayout);
        pPainelLayout.setHorizontalGroup(
            pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spPizza, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                    .addComponent(spIngredientes)
                    .addGroup(pPainelLayout.createSequentialGroup()
                        .addComponent(lSabor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSabor))
                    .addGroup(pPainelLayout.createSequentialGroup()
                        .addGroup(pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lIngredientes)
                            .addGroup(pPainelLayout.createSequentialGroup()
                                .addComponent(lTipo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lPreço)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pPainelLayout.setVerticalGroup(
            pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lSabor)
                    .addComponent(tfSabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lIngredientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTipo)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lPreço)
                    .addComponent(ftfPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(spPizza, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pPainel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tPizzaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPizzaMouseClicked
        
        try{
        popularCampos();
        esconderCampos();
        
        }catch (Exception exc) {

            JOptionPane.showMessageDialog(null, "Tabela está desabilitada", "Cadastro Pizza", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tPizzaMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        templatePrincipal.setEnabled(true);
        templatePrincipal.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JFormattedTextField ftfPreco;
    private javax.swing.JLabel lIngredientes;
    private javax.swing.JLabel lPreço;
    private javax.swing.JLabel lSabor;
    private javax.swing.JLabel lTipo;
    private javax.swing.JPanel pPainel;
    private javax.swing.JScrollPane spIngredientes;
    private javax.swing.JScrollPane spPizza;
    private javax.swing.JTable tPizza;
    private javax.swing.JTextArea taIngredientes;
    private javax.swing.JTextField tfSabor;
    // End of variables declaration//GEN-END:variables

    @Override
    public void bNovoActionPerformed(ActionEvent e) {
        
        editar = 0;
        limpaCampos();
        mostrarCampos();
        
        bNovo.setEnabled(false);
        bSalvar.setEnabled(true);
        bEditar.setEnabled(false);
        bExcluir.setEnabled(false);
        bCancelar.setEnabled(true);
        tPizza.setEnabled(false);
    }

    @Override
    public void bSalvarActionPerformed(ActionEvent e) {
        
        try{
            
            if (tfSabor.getText().trim().equals(null) || taIngredientes.getText().trim().equals(null) || cbTipo.getSelectedIndex()==0 || ftfPreco.getText().trim().equals(null)){
                JOptionPane.showMessageDialog(null, "Preencha todos os campos", "Cadastro Pizza", JOptionPane.PLAIN_MESSAGE);
            }else{
            PizzaVO pizzaVO = new PizzaVO();
            
            if (editar == 1){
                pizzaVO.setCodigo(Integer.parseInt(tfCodigo.getText()));
            }
            
            pizzaVO.setSabor(tfSabor.getText());
            pizzaVO.setIngredientes(taIngredientes.getText());
            pizzaVO.setTipo((String) cbTipo.getSelectedItem());
            pizzaVO.setPreco(ftfPreco.getText());

            PizzaRN pizzaRN = new PizzaRN();
            pizzaRN.salvarPizza(pizzaVO, editar);
            
            bNovo.setEnabled(true);
            bSalvar.setEnabled(false);
            bEditar.setEnabled(true);
            bExcluir.setEnabled(true);
            bCancelar.setEnabled(false);
            tPizza.setEnabled(true);
            esconderCampos();
            popularTabela();
            
            JOptionPane.showMessageDialog(null, "Item salvo com sucesso.", "Cadastro de Pizza", JOptionPane.INFORMATION_MESSAGE); 
            }
            
        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Cadastro Pizza", JOptionPane.ERROR_MESSAGE);
        
        }  catch (Exception exc) {

            JOptionPane.showMessageDialog(null, "Erro: " + exc.getMessage(), "Cadastro Pizza", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void bEditarActionPerformed(ActionEvent e) {
        
        if (tfSabor.getText().trim().equals("")) {

            JOptionPane.showMessageDialog(null, "Selecione uma pizza.", "Editar Pizza", JOptionPane.WARNING_MESSAGE);

        } else{
            editar = 1;
            
            bNovo.setEnabled(false);
            bSalvar.setEnabled(true);
            bEditar.setEnabled(false);
            bExcluir.setEnabled(false);
            bCancelar.setEnabled(true);
            tPizza.setEnabled(false);
            mostrarCampos();
        }
    }

    @Override
    public void bExcluirActionPerformed(ActionEvent e) {
        
        try{
            
            int confirmacao;
            PizzaVO pizzaVO = new PizzaVO();
        
            confirmacao = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Cadastro de Pizza", JOptionPane.YES_NO_OPTION);
                if (confirmacao == 0){

                pizzaVO.setCodigo(Integer.parseInt((String) tPizza.getValueAt(tPizza.getSelectedRow(), 0)));

                PizzaRN pizzaRN = new PizzaRN();
                pizzaRN.excluirPizza(pizzaVO);

                limpaCampos();
                popularTabela();
                JOptionPane.showMessageDialog(null, "Pizza excluída com sucesso!", "Cadastro de Pizza", JOptionPane.PLAIN_MESSAGE);
                }
                
        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Exclusão Pizza", JOptionPane.ERROR_MESSAGE);
            
        } catch (ArrayIndexOutOfBoundsException aiobe) {

            JOptionPane.showMessageDialog(null, "Selecione uma pizza.", "Exclusão Pizza", JOptionPane.WARNING_MESSAGE);

        } catch (Exception exc) {

            JOptionPane.showMessageDialog(null, "Erro: " + exc.getMessage(), "Exclusão Pizza", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void bCancelarActionPerformed(ActionEvent e) {
        
        int confirmacao;
        confirmacao = JOptionPane.showConfirmDialog(null, "Deseja realmente cancelar", "Cancelar", JOptionPane.YES_NO_OPTION);
        if (confirmacao == 0){
            
            bNovo.setEnabled(true);
            bSalvar.setEnabled(false);
            bEditar.setEnabled(true);
            bExcluir.setEnabled(true);
            bCancelar.setEnabled(false);
            tPizza.setEnabled(true);
            limpaCampos();
            esconderCampos();
        }
    }
    
    @Override
    public void actionPerformed (ActionEvent e){
        
        switch (e.getActionCommand()){
            
            case "Novo":
                
                bNovoActionPerformed(e);
                break;
                
            case "Salvar":
                
                bSalvarActionPerformed(e);
                break;
                
            case "Editar":
                
                bEditarActionPerformed(e);
                break;
                
            case "Excluir":
                
                bExcluirActionPerformed(e);
                break;
                
            case "Cancelar":
                
                bCancelarActionPerformed(e);
                break;
        }
    }
    
    public void mostrarCampos(){
        
        tfSabor.setEnabled(true);
        taIngredientes.setEnabled(true);
        cbTipo.setEnabled(true);
        ftfPreco.setEnabled(true);
    }
    
    public void esconderCampos(){
        
        tfSabor.setEnabled(false);
        taIngredientes.setEnabled(false);
        cbTipo.setEnabled(false);
        ftfPreco.setEnabled(false);
    }
    
    public void limpaCampos(){
        
        tfCodigo.setText("");
        tfSabor.setText("");
        taIngredientes.setText("");
        cbTipo.setSelectedIndex(0);
        ftfPreco.setText("");
    }
    
    public void popularCampos() {

        tfCodigo.setText((String) tPizza.getValueAt(tPizza.getSelectedRow(), 0));
        tfSabor.setText((String) tPizza.getValueAt(tPizza.getSelectedRow(), 1));
        taIngredientes.setText((String) tPizza.getValueAt(tPizza.getSelectedRow(), 2));
        cbTipo.getModel().setSelectedItem((String) tPizza.getValueAt(tPizza.getSelectedRow(), 3));
        ftfPreco.setText((String) tPizza.getValueAt(tPizza.getSelectedRow(), 4));
    }
    
    public void popularTabela() {

        try {

            PizzaRN pizzaRN = new PizzaRN();

            ArrayList<PizzaVO> pizzas = pizzaRN.buscarPizzas();

            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tPizza.getModel();
            dtm.fireTableDataChanged();
            dtm.setRowCount(0);

            for (PizzaVO pizzaVO : pizzas) {

                String[] linha = {"" + pizzaVO.getCodigo(), "" + pizzaVO.getSabor(), "" + pizzaVO.getIngredientes(), "" + pizzaVO.getTipo(), "" + pizzaVO.getPreco()};
                dtm.addRow(linha);
            }

        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Pizzas", JOptionPane.ERROR_MESSAGE);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage(), "Pizzas", JOptionPane.ERROR_MESSAGE);
        }
    }
}
