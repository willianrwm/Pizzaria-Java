/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import regraNegocio.ClienteRN;
import vo.ClienteVO;
import vo.PedidoVO;

/**
 *
 * @author Karpa
 */
public class ModuloConsultaClientes extends javax.swing.JFrame {
            
    /**
     * Creates new form ModuloConsultaClientes
     */
    ModuloCliente moduloCliente;
    
    ModuloConsultaClientes(ModuloCliente moduloCliente) {
        initComponents();
        popularTabela();
        setLocationRelativeTo(null);
        this.moduloCliente = moduloCliente;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pConsulta = new javax.swing.JPanel();
        lNome = new javax.swing.JLabel();
        spClientes = new javax.swing.JScrollPane();
        tClientes = new javax.swing.JTable();
        bSeleciona = new javax.swing.JButton();
        ftfTelefone = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar Clientes");
        setMinimumSize(new java.awt.Dimension(700, 330));

        pConsulta.setPreferredSize(new java.awt.Dimension(700, 330));

        lNome.setText("Telefone:");

        tClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Telefone", "Logradouro", "Número", "Complemento", "Bairro", "Cidade", "Estado", "CEP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spClientes.setViewportView(tClientes);

        bSeleciona.setText("Selecionar");
        bSeleciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSelecionaActionPerformed(evt);
            }
        });

        try {
            ftfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ftfTelefoneKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pConsultaLayout = new javax.swing.GroupLayout(pConsulta);
        pConsulta.setLayout(pConsultaLayout);
        pConsultaLayout.setHorizontalGroup(
            pConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addGroup(pConsultaLayout.createSequentialGroup()
                        .addComponent(lNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pConsultaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bSeleciona)))
                .addContainerGap())
        );
        pConsultaLayout.setVerticalGroup(
            pConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNome)
                    .addComponent(ftfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(spClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bSeleciona)
                .addGap(6, 6, 6))
        );

        getContentPane().add(pConsulta, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSelecionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSelecionaActionPerformed
        
        try {

            ClienteVO clienteVO = new ClienteVO();
           
            clienteVO.setCodigo(Integer.parseInt((String) tClientes.getValueAt(tClientes.getSelectedRow(), 0)));
            clienteVO.setNome((String) tClientes.getValueAt(tClientes.getSelectedRow(), 1));
            clienteVO.setTelefone((String) tClientes.getValueAt(tClientes.getSelectedRow(), 2));
            clienteVO.setLogradouro((String) tClientes.getValueAt(tClientes.getSelectedRow(), 3));
            clienteVO.setNumero(Integer.parseInt((String) tClientes.getValueAt(tClientes.getSelectedRow(), 4)));
            clienteVO.setComplemento((String) tClientes.getValueAt(tClientes.getSelectedRow(), 5));
            clienteVO.setBairro((String) tClientes.getValueAt(tClientes.getSelectedRow(), 6));
            clienteVO.setCidade((String) tClientes.getValueAt(tClientes.getSelectedRow(), 7));
            clienteVO.setEstado((String) tClientes.getValueAt(tClientes.getSelectedRow(), 8));
            clienteVO.setCEP((String) tClientes.getValueAt(tClientes.getSelectedRow(), 9));
            
            moduloCliente.popularCampos(clienteVO);
                
            this.dispose();

        } catch (ArrayIndexOutOfBoundsException aiobe) {

            JOptionPane.showMessageDialog(null, "Selecione um cliente.", "Edição Cliente", JOptionPane.WARNING_MESSAGE);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage(), "Edição Cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bSelecionaActionPerformed

    private void ftfTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftfTelefoneKeyReleased
        
        filtrarClientes();
    }//GEN-LAST:event_ftfTelefoneKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSeleciona;
    private javax.swing.JFormattedTextField ftfTelefone;
    private javax.swing.JLabel lNome;
    private javax.swing.JPanel pConsulta;
    private javax.swing.JScrollPane spClientes;
    private javax.swing.JTable tClientes;
    // End of variables declaration//GEN-END:variables
    
    public void popularTabela() {

        try {

            ClienteRN clienteRN = new ClienteRN();

            ArrayList<ClienteVO> clientes = clienteRN.buscarClientes();

            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tClientes.getModel();
            dtm.fireTableDataChanged();
            dtm.setRowCount(0);

            for (ClienteVO clienteVO : clientes) {

                String[] linha = {"" + clienteVO.getCodigo(), "" + clienteVO.getNome(), "" + clienteVO.getTelefone(), "" + clienteVO.getLogradouro(), "" + clienteVO.getNumero(), "" + clienteVO.getComplemento(), "" + clienteVO.getBairro(), "" + clienteVO.getCidade(), "" + clienteVO.getEstado(), "" + clienteVO.getCEP()};
                dtm.addRow(linha);
            }

        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Clientes", JOptionPane.ERROR_MESSAGE);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage(), "Clientes", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    public void filtrarClientes() {

        try {

            ClienteRN clienteRN = new ClienteRN();

            ArrayList<ClienteVO> clientes = clienteRN.filtrarClientes(ftfTelefone.getText());

            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) tClientes.getModel();
            dtm.fireTableDataChanged();
            dtm.setRowCount(0);

            for (ClienteVO clienteVO : clientes) {

                String[] linha = {"" + clienteVO.getCodigo(), "" + clienteVO.getNome(), "" + clienteVO.getTelefone(), "" + clienteVO.getLogradouro(), "" + clienteVO.getNumero(), "" + clienteVO.getComplemento(), "" + clienteVO.getBairro(), "" + clienteVO.getCidade(), "" + clienteVO.getEstado(), "" + clienteVO.getCEP()};
                dtm.addRow(linha);
            }

        } catch (SQLException sqle) {

            JOptionPane.showMessageDialog(null, "Erro: " + sqle.getMessage(), "Clientes", JOptionPane.ERROR_MESSAGE);
            
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage(), "Clientes", JOptionPane.ERROR_MESSAGE);
        }
    }
}
